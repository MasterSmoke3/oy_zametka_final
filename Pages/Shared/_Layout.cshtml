@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="ru" data-bs-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ZametkiApp</title>

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />

    @RenderSection("Styles", required: false)

    <style>
        body {
            background-color: var(--bs-body-bg);
            color: var(--bs-body-color);
        }

        /* –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */
        .notification-toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: #7b2cbf;
            color: white;
            padding: 15px 20px;
            border-radius: 12px;
            box-shadow: 0 0 10px rgba(0,0,0,0.3);
            z-index: 9999;
            font-family: sans-serif;
            opacity: 0;
            animation: fadeInOut 8s ease forwards;
        }

    </style>
</head>
<body>
    <header>
        <div class="container d-flex justify-content-between align-items-center pt-3">
            <div>
                @{
                    var currentPath = Context.Request.Path.Value?.ToLowerInvariant();
                }
                @if (!string.IsNullOrEmpty(currentPath) && currentPath != "/" && currentPath != "/index")
                {
                    <a href="/" style="text-decoration: none; font-size: 20px; padding: 5px 10px; border-radius: 5px; background-color: #f0f0f0; color: #333;">‚Üê</a>
                }
            </div>
            <div class="d-flex align-items-center gap-2">
                <button id="themeToggleBtn" class="btn btn-outline-light btn-sm" type="button">üåì</button>
                <a href="/Settings" class="btn btn-outline-light btn-sm">‚öô</a>
                <partial name="_LoginPartial" />
            </div>
        </div>
    </header>

    <div class="container mt-4">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted mt-4">
        <div class="container">
            &copy; @DateTime.Now.Year - ZametkiApp
        </div>
    </footer>

    <!-- JS -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js"></script>

    <!-- SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("ReceiveReminder", function (message) {
            const toast = document.createElement("div");
            toast.className = "notification-toast";
            toast.textContent = message;
            document.body.appendChild(toast);

            setTimeout(() => toast.remove(), 8000);
        });

        connection.start().catch(err => console.error(err));
    </script>

    <!-- Theme switcher -->
    <script>
        const themeToggleBtn = document.getElementById('themeToggleBtn');
        const html = document.documentElement;

        function applyTheme(theme) {
            html.setAttribute('data-bs-theme', theme);
            localStorage.setItem('theme', theme);
        }

        function toggleTheme() {
            const current = html.getAttribute('data-bs-theme');
            applyTheme(current === 'dark' ? 'light' : 'dark');
        }

        themeToggleBtn.addEventListener('click', toggleTheme);

        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'light' || savedTheme === 'dark') {
            applyTheme(savedTheme);
        }
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
